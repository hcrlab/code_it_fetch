# General setup
# -------------
sudo: required
dist: trusty
language: python
python:
    - "2.7"
# Allows the python virtualenv to use apt-get installed packages, which
# is essential (as ROS recommends this and pip doesn't seem to contain
# all packages, or contains them with errors).
virtualenv:
    system_site_packages: true
# Allow caching of debian (apt-get) packages. This means they're cached
# on Travis, so we still have to download/install them, but it will be
# faster than going to the ubuntu repositories.
cache: apt
# Before anything, see if we can get the mongoDB troubles out of the way.
# Note that this is a Travis-CI specific problem; this is not needed in
# general.
before_install: # Use this to prepare the system to install prerequisites or dependencies
    # Define some config vars
    - sudo apt-get --purge remove mongodb-10gen postgresql-9.2 postgresql-contrib-9.2 postgresql-9.3 postgresql-contrib-9.3
    - export ROS_DISTRO=indigo
    # Settings to make installing script more general.
    - export ROS_CI_DESKTOP=`lsb_release -cs`  # e.g. 'precise'
    - export ROS_MASTER_URI=http://localhost:11311

notifications:
  email: false
  slack:
    secure: "TPlZn+XmR6XTw9dgWWQTBFRTtlvhgMePCEaYOIBga92CryU50eb/D9lsnvlEh/JxyCDl3HvH4ThGN9XIU3076xraabXr65vkc3+UgionLbdNyeYnqPp4IE1iRn8tgJipURJP0SE32gA6K3ZVc+2gzhLfhQ4yVUQIJQzC9hSKy5ITKaobqr6atiihmfwX12oQK3zekbpcMHl/3L8ZV4l9bm4JTdQ+V6w3zA8xPIRhhIyG336+otzKm338X6VTSdaAjJA822B3u9UHLXYUqhCFECRXqrsLC33ZYg8S6n3a1DYTFAuVS35NEJX4wqDGHDAVuOKe+EmSQHKrNuRmDEO/QmPBh6N3g0Lkgtgfijsci9/1PDCjJy+q8NhzZD/52VXQ8BxLSGzd1WIxEPeoOcggJUt0i3989R+PlzJaUHUvv/aRAs9WuLVlaWl/nCPbuM3CgjV4M/4vcNAY+a8bqpS8bFHcQm2/jeHAlRC3q9kfVGUszmvlzTJFm0oHOuRNI8Fd+d8pRmvi5myMM5mtgPej1MX9s0XUCpHHLz01DlgMDSc0ZB0WPWjYEPDB7R/BgK+PgUf4WWhQL+Nt2A7UyqB5uhKd+/ojwydZf1LCMd3QWYHNAOLt9d6cYkX5Lxl9tpNZiafnePGur0q9Bd+gSzftPSS6NcYXfqIdtYNKUcMr/VM="

# Commands to install dependencies
# --------------------------------
install:
    # Install ROS
    - echo "deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main" | sudo tee /etc/apt/sources.list.d/ros-latest.list
    - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros
    - sudo apt-get install -qq -y mongodb ros-$ROS_DISTRO-warehouse-ros
    - sudo apt-get install -qq -y ros-$ROS_DISTRO-moveit-*
    - sudo pip install -U setuptools
    - sudo pip install -U catkin_tools
    - source /opt/ros/$ROS_DISTRO/setup.bash
    # Setup rosdep
    - sudo rosdep init
    - rosdep update
    # Create workspace.
    - mkdir -p ~/catkin_ws/src
    - cd ..; mv code_it_pr2 ~/catkin_ws/src
    - cd ~/catkin_ws/src
    - git clone https://github.com/hcrlab/blinky.git
    - git clone https://github.com/hcrlab/code_it_msgs.git
    - git clone https://github.com/jstnhuang/rapid.git
    - catkin_init_workspace
    # Install dependencies
    - cd ~/catkin_ws/
    - rosdep install --from-paths src --ignore-src --rosdistro=${ROS_DISTRO} -y -q
    # Install latest gmock
    #- mkdir ~/local
    #- cd ~/local
    #- git clone https://github.com/google/googletest.git
    #- cd ~/local/googletest
    #- mkdir mybuild
    #- cd ~/local/googletest/mybuild
    #- cmake ..
    #- make
    #- sudo make install
    # Build
    - cd ~/catkin_ws/
    - catkin build code_it_fetch

# Command to run tests
# --------------------
#script:
#    - catkin build --catkin-make-args run_tests -- code_it_pr2 --no-deps
#    - catkin_test_results build/code_it_pr2
